// Generated by Dagger (https://dagger.dev).
package com.purple.hello.domain.setting.room;

import com.purple.data.rooms.repository.RoomRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DeleteRoomUseCase_Factory implements Factory<DeleteRoomUseCase> {
  private final Provider<RoomRepository> roomRepositoryProvider;

  public DeleteRoomUseCase_Factory(Provider<RoomRepository> roomRepositoryProvider) {
    this.roomRepositoryProvider = roomRepositoryProvider;
  }

  @Override
  public DeleteRoomUseCase get() {
    return newInstance(roomRepositoryProvider.get());
  }

  public static DeleteRoomUseCase_Factory create(Provider<RoomRepository> roomRepositoryProvider) {
    return new DeleteRoomUseCase_Factory(roomRepositoryProvider);
  }

  public static DeleteRoomUseCase newInstance(RoomRepository roomRepository) {
    return new DeleteRoomUseCase(roomRepository);
  }
}
